user <SSD_LAUNCH_USER>;
worker_processes  <NGINX_WORKER_PROCESSES>;
error_log  /var/log/nginx/error.log;
pid        nginx.pid;
worker_rlimit_nofile <NGINX_WORKER_RLIMIT_NOFILE>;

events {
  worker_connections  <NGINX_WORKER_CONNECTIONS>;
}

http {
  #include  conf/mime.types;
  include  /etc/nginx/mime.types;
  index    index.html;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /var/log/nginx/access.log  main;
  sendfile     on;
  tcp_nopush   on;

  # sets value to `*` if not present:
  # default is *, but if any value exists already,
  # the new header will have and empty value, as a result will not be set
  map $upstream_http_access_control_allow_origin $add_wildcard_cors_if_not_exists {
    default '*';
    '~.' "";
  }

  server { # UI
    listen       3000;
    server_name  <NGINX_UI_SERVER_NAME>;
    access_log   /var/log/nginx/access.log  main;
    root    /etc/nginx/html;
    gzip on;
    gzip_types application/json;
    large_client_header_buffers <NGINX_LARGE_CLIENT_HEADER_BUFFER_CONFIG>;

    location / {
      expires 30d;
      autoindex on;
    }

    location ~ ^/(index.html|favicon.svg) {
      if_modified_since off;
      add_header Last-Modified "";
      add_header Cache-Control no-cache;
    }

    location  ~ ^/(js|css|images|fonts|mf)/ {
      gzip_static on;
      if_modified_since off;
      add_header Last-Modified "";
      add_header Cache-Control "public, max-age=31536000";
    }

    location = /mf/sidemenu/sidemenu.config.json {
      if_modified_since off;
      gzip_static on;
      add_header Last-Modified "";
      add_header Cache-Control no-cache;
    }

    location ~ ^/?(parentMenuItems.json|childrenMenuItems.json|parent-menu-items.json) {
      if_modified_since off;
      add_header Last-Modified "";
      add_header Cache-Control no-cache;
      if ($http_origin) {
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Origin' $http_origin;
      }
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Origin' $add_wildcard_cors_if_not_exists;
    }

    location ~ ^/?(.*\.ttf|.*\.eot|.*\.woff2|.*\.woff) {
      add_header 'Access-Control-Allow-Origin' $add_wildcard_cors_if_not_exists;
    }

    location = /health {
        access_log off;
        add_header Content-Type application/json;
        return 200 "{\"status\":\"ok\"}";
    }
  }
}
